First, I learned how to declare the variables, how to initialize the variables and how to declare the variables to their respective data types. The most difficult part for me was to find out the loonies/quarters/dimes/nickels/pennies from the amount entered by the user. The interesting part for me was, how the ‘/’ and ‘%’ work in C language. It is completely different how ALU works inside the CPU than the regular math that we do. Here in C language, ‘/’ provides the quotient of the number whereas, ‘%’ provides the remainder of the number. This is was a new thing that I learnt and helped me the most throughout the workshop to calculate all the values asked by the professor.

Another interesting part was when the int type variable was casted into a double type and written as “%1.2lf” where “1” to the left indicates print 1 number to the left of decimal point and 2 after the decimal indicates print 2 numbers to the right of the decimal. The casting concept made me understand how we can print the decimal numbers into a float or a double even if they are of type integer.

It is often a best practice to convert floating-point values to integers when performing arithmetic operations, because for the floating points, there is no modulus or ‘%’ operator so we cannot perform the task that we want to. Also, all the variables that we are working with the specific floating-point variable will either need a casting to float/double types or need to be changed to floating-point values since integer is a smaller number in size compared to floating-point numbers. If we do not convert integer numbers into a floating-point value will cause inefficiencies into our data. And all of this is unnecessary amount of work which is why floating-point variables are converted into integer then, arithmetic operations are performed and then casted back into floating-point variables, if we need to print out the floating-point variable.

Furthermore, modulus operator helps us provide the remainder of the number when it is divided by any number. Now, in this specific workshop we needed to calculate the balance owing and since we knew that the values of loonies(100)/quarters(25)/dimes(10)/nickels(5)/pennies(1) remains the same, when we use ‘%’ for our arithmetic operations, the number with these above values we can easily get and store the remaining balance every time to a new variable until we get the remainder as ‘0’.

